#+TITLE: Basic configuration of Emacs
This and all others Emacs configuration files own huge debt to
[Daniel Mai](https://github.com/danielmai/.emacs.d/) ???

* Configuration of basic build-in features

** Setting up basic built-in variables

#+BEGIN_SRC emacs-lisp
(setq next-line-add-newlines t)
(setq sentence-end-double-space nil)

(setq save-interprogram-paste-before-kill t)
#+END_SRC

** Predicators
Change question from "yes or no" to "y or n".

#+BEGIN_SRC emacs-lisp
(defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC

** Global keychords
????

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "RET") 'newline-and-indent)
(global-set-key [F1] 'shell)
#+END_SRC

Key binding below don't work in org mode. How to fix that?
#+BEGIN_SRC emacs-lisp
(global-set-key [C-tab] 'other-window)
#+END_SRC



** Global build-in minor modes
These build-in minor modes are turn on in all Emacs windows, despite
the major mode.

Shows number of line on the left edge of window.
#+BEGIN_SRC emacs-lisp
(global-linum-mode t)
#+END_SRC

Show number of colume where Emacs point is.
#+BEGIN_SRC emacs-lisp
(column-number-mode t)
#+END_SRC

Lines longer that Emacs window won't be wrapped, but splitted between few lines.
#+BEGIN_SRC emacs-lisp
(global-visual-line-mode 1)
#+END_SRC

Line where point is will be highlighted.
#+BEGIN_SRC emacs-lisp
(global-hl-line-mode t)
#+END_SRC

Allowing undoing of windows changes.
#+BEGIN_SRC emacs-lisp
(winner-mode 1)
#+END_SRC

Switch on automatic parentis pairing.
#+BEGIN_SRC emacs-lisp
(electric-pair-mode t)
#+END_SRC

I don't know what code below is doing.

Somethings is wrong with code below? Maybe, I need to check it.
#+BEGIN_SRC emacs-lisp
(setq outline-minor-mode-prefix "\C-c \C-o")
#+END_SRC

#+BEGIN_SRC emacs-lisp
(global-auto-revert-mode 1)
#+END_SRC

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "<F5>") 'revert-buffer)
#+END_SRC



** Global build-in hooks
These build-in hooks will be avalible in any Emacs windows and major
modes.

After calling function to save a buffer and before it is saved,
Emacs will remove all whitespaces from the end of the line, with
exception for empty lines that are not at the ending of the file,
and all the empty lines from the end of the file.

As a result all non empty lines will end with non-whitespace character.
Empty lines that are not at the end of the file (the are follow by some
proper text) are reduced to single newline character.

#+BEGIN_SRC emacs-lisp
(add-hook 'before-save-hook 'delete-trailing-whitespace)
#+END_SRC



** Setting of backups files management
???? Add explenation what this code do.

Setting up directory in which backups files will be stored.
#+BEGIN_SRC emacs-lisp
(setq backup-directory-alist
  (list (cons "." (concat user-emacs-directory "EmacsBackups/"))))
#+END_SRC

????
#+BEGIN_SRC emacs-lisp
(setq
  delete-old-versions 1
  version-control t
  vc-make-backup-files t
  auto-save-file-name-transforms
  (list
    (list ".*"
      (concat user-emacs-directory "auto-save-list/")
        t)))
#+END_SRC



** Org-mode
Configuration of gigantic **org-mode**.

#+BEGIN_SRC emacs-lisp
(use-package org
  :ensure t
  :pin org)
#+END_SRC

????
#+BEGIN_SRC emacs-lisp
(custom-set-variables
  '(org-export-html-postamble nil)
  '(org-hide-leading-stars t)
  '(org-startup-folded (quote overview))
  '(org-startup-indented t))
#+END_SRC

????
#+BEGIN_SRC emacs-lisp
(setq org-files-apps (append '(("\\.pdf\\" . "evince %s")
   org-files-apps)))
#+END_SRC

????
#+BEGIN_SRC emacs-lisp
(global-set-key "\C-ca" 'org-agenda)
#+END_SRC

????
#+BEGIN_SRC emacs-lisp
;; (global-set-key (kbd "C-c c") 'org-capture)
#+END_SRC

?????
#+BEGIN_SRC emacs-lisp
  ;; (setq org-agenda-files (list ))

  ;; (setq org-agenda-files (list
  ;; "~/Podstawy-I/org/Wazne.org"
  ;; "~/Podstawy-I/org/Szybko.org"
  ;; "~/Podstawy-I/org/Praca.org"
  ;; "~/Podstawy-I/org/Ksiazki.org"
  ;; "~/Podstawy-I/org/Kup.org"
  ;; "~/Podstawy-I/org/Przemysl.org"))
#+END_SRC



** Settings of customize mode (???) in Emacs
Settings will be saved in separate file customize.el, not in init.el
file.

Setting location of `customize.el' file.
#+BEGIN_SRC emacs-lisp
(setq custom-file
  (concat user-emacs-directory "Customize-file/customize.el"))
#+END_SRC

Settings of custiomize mode will be loaded from `customize.el' file.
#+BEGIN_SRC emacs-lisp
(load custom-file t)
#+END_SRC



** Settings of auto-correction of normal languages
Setting polish dictionary for use by auto-correction program
#+BEGIN_SRC emacs-lisp
;; (setq ispell-dictionary "english")
(setq ispell-dictionary "polish")
#+END_SRC

Turning on auto-correction in standard .txt files.
#+BEGIN_SRC emacs-lisp
(add-hook 'text-mode-hook 'flyspell-mode)
(add-hook 'text-mode-hook 'flyspell-buffer)
#+END_SRC
